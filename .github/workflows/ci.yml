name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  stack:
    name: stack ${{ matrix.stack }} / ghc ${{ matrix.ghc }} / consul ${{ matrix.consul-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false    # let other jobs run, even if one fails
      matrix:
        stack:
          - "2.3.1"
        ghc:
          - "8.8.3"
        consul-version:
          - "1.3.1"
          - "1.4.5"
          - "1.5.3"
          - "1.6.10"
          - "1.7.11"
          - "1.8.7"
          - "1.9.4"
          - "1.10.0-alpha"
    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: actions/setup-haskell@v1.1
      name: Setup Haskell Stack
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v2
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-consul-${{ matrix.consul-version }}-stack-work

    - uses: actions/cache@v2
      name: Cache .stack-work
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-consul-${{ matrix.consul-version }}-stack-work

    - name: Install Consul
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        sudo make install-consul VERSION=${{ matrix.consul-version }}
        sudo make symlink-consul VERSION=${{ matrix.consul-version }}

    - name: Build
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        PATH=~/.local/bin/:$PATH stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        PATH=~/.local/bin/:$PATH stack test --system-ghc
  # Inspired by:
  # https://nix.dev/tutorials/continuous-integration-github-actions.html
  nix:
    name: nix-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
    - run: nix-build --no-out-link

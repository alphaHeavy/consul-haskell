name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  stack:
    name: stack ${{ matrix.stack }} / ghc ${{ matrix.ghc }} / consul ${{ matrix.consul-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false    # let other jobs run, even if one fails
      matrix:
        stack:
          - "2.3.1"
        ghc:
          - "8.8.3"
        consul-version:
          - "1.3.1"
          - "1.4.5"
          - "1.5.3"
          - "1.6.10"
          - "1.7.11"
          - "1.8.7"
          - "1.9.13"
          - "1.10.6"
          - "1.11.1"
    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - name: Setup Haskell Stack
      uses: actions/setup-haskell@v1.1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-dot-stack-root

    - name: Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-dot-stack-work

    - name: Cache Consul Executables
      uses: actions/cache@v2
      with:
        path: /opt/consul
        key: ${{ runner.os }}-stack-${{ matrix.stack }}-ghc-${{ matrix.ghc }}-consul-${{ matrix.consul-version }}

    - name: Install Consul
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        sudo make install-consul VERSION=${{ matrix.consul-version }}
        sudo make symlink-consul VERSION=${{ matrix.consul-version }}

    - name: Stack Build
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        make build

    - name: Stack Test
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        make test

  # Inspired by:
  # https://nix.dev/tutorials/continuous-integration-github-actions.html
  nix:
    name: nix-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
    - run: nix-build --no-out-link

  # Build Project Documentation
  haddocks:
    name: haddock-build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - name: Setup Haskell Stack
      uses: actions/setup-haskell@v1.1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: haddock-dot-stack-root

    - name: Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: haddock-dot-stack-work

    - name: Stack Haddock Build
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        make doc

    # see also https://github.com/marketplace/actions/upload-a-build-artifact
    # and https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts
    - name: Package Html Documentation
      run: |
        tar -czvf consul-haskell-haddocks.tgz ./.stack-work/install/x86_64-linux-tinfo6/*/*/doc/consul-haskell-*

    - name: Archive Html Documentation (upload as artifact)
      uses: actions/upload-artifact@v2
      with:
        name: haddocks
        path: consul-haskell-haddocks.tgz

